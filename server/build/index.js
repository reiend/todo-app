"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value)})}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:true});const express_1=__importDefault(require("express"));const mongodb_1=__importDefault(require("./db/mongodb"));const cors_1=__importDefault(require("cors"));const dotenv_1=__importDefault(require("dotenv"));const routes_1=__importDefault(require("./routes"));const errorMiddleware_1=__importDefault(require("./middlewares/errorMiddleware"));const notFoundMiddleware_1=__importDefault(require("./middlewares/notFoundMiddleware"));dotenv_1.default.config();const app=(0,express_1.default)();const port=process.env.PORT||4e3;app.use((0,cors_1.default)({origin:"*"}));app.use(express_1.default.json());app.use(express_1.default.urlencoded({extended:false}));app.use("/api/v1",routes_1.default.todoRouter);app.use(errorMiddleware_1.default);app.use(notFoundMiddleware_1.default);const initialize=()=>__awaiter(void 0,void 0,void 0,function*(){try{const mongo=yield(0,mongodb_1.default)(process.env.MONGO_URL);console.log(`MongoDB connected ${mongo.connection.host}`);app.listen(port,()=>{console.log(`listening on port ${port}`)})}catch(error){process.exit(1)}});initialize();